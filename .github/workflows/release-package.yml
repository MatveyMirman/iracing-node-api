name: Publish Package

on:
  push:
    branches:
      - main

jobs:
  validate-changelog:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.validate.outputs.new_version }}
      changelog: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate Changelog
        id: git-cliff
        uses: orhun/git-cliff-action@v4
        with:
          args: -vv --bump --latest --strip header
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}
      - name: Get Latest Tag
        id: latest_tag
        run: |
          latest=$(git tag --sort=-v:refname | head -n 1)
          echo "Latest tag is: $latest"
          echo "latest_tag=$latest" >> $GITHUB_OUTPUT
      - name: Validate Version
        id: validate
        run: |
          new_version="${{ steps.git-cliff.outputs.version }}"
          latest="${{ steps.latest_tag.outputs.latest_tag }}"
          echo "New version from git-cliff: $new_version"
          echo "Latest tag: $latest"
          # If there's no latest tag, assume new_version is valid.
          if [ -z "$latest" ]; then
            echo "No latest tag found. Using new version: $new_version"
            echo "new_version=$new_version" >> $GITHUB_OUTPUT
          # If the new version is the same as the latest tag, then no new version is available.
          elif [ "$new_version" = "$latest" ]; then
            echo "No new version detected. Skipping subsequent jobs."
            echo "new_version=" >> $GITHUB_OUTPUT
          else
            echo "New version detected: $new_version"
            echo "new_version=$new_version" >> $GITHUB_OUTPUT
          fi

  build:
    needs: validate-changelog
    if: ${{ needs.validate-changelog.outputs.new_version != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "main"

      - name: "Install Pnpm"
        uses: pnpm/action-setup@v2
        with:
          version: "9.15"

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: |
          pnpm install
      - run: pnpm test

  publish-gpr:
    needs: [validate-changelog, build]
    if: ${{ needs.validate-changelog.outputs.new_version != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: "main"
          fetch-depth: 0
      - name: Install Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "9.15"
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: "https://registry.npmjs.org"
      - name: Install Dependencies
        run: pnpm install
      - name: Build Source
        run: pnpm build
      - run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ needs.validate-changelog.outputs.new_version }}
          body: ${{ needs.validate-changelog.outputs.changelog }}
